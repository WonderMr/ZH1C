Функция Запиши(Событие, МалоеОписание, БольшоеОписание = "", Уровень = Неопределено) Экспорт
    Если
        НЕ ЗначениеЗаполнено(Уровень)
    Тогда
        Уровень             =   EventLogLevel.Information;
    КонецЕсли;
    ДТ                      =   Формат(ТекущаяДатаСеанса(), "ДЛФ = ДВ");
    МалоеОписание           =   ДТ + " " + МалоеОписание;
    ЗаписьЖурналаРегистрации(Событие, Уровень, , МалоеОписание, БольшоеОписание);
    Если
        Уровень = EventLogLevel.Error
    Тогда
        Сообщить(БольшоеОписание);
    Иначе
        Сообщить(МалоеОписание);
    КонецЕсли;
    Возврат МалоеОписание;
КонецФункции

Функция ЗапишиОшибку(ИнформацияОбОшибке, Событие = "Ошибка", МалоеОписание = "", БольшоеОписание = "", Уровень = "") Экспорт
    СимВКПС                 =   Символы.ВК + Символы.ПС;
    Если
        Не ЗначениеЗаполнено(Уровень)
    Тогда
        Уровень             =   EventLogLevel.Error;
    КонецЕсли;
    Если
        ЗначениеЗаполнено(МалоеОписание)
    Тогда
        МалоеОписание       =   ИнформацияОбОшибке.Описание + " " + МалоеОписание;
    Иначе
        МалоеОписание       =   ИнформацияОбОшибке.Описание;
    КонецЕсли;
    ЕстьПричина             =   ЕстьСвойство        (ИнформацияОбОшибке, "Причина")
                            И   Не ИнформацияОбОшибке.Причина = Неопределено
                            И   ЕстьСвойство        (ИнформацияОбОшибке.Причина, "Описание")
                            И   ЗначениеЗаполнено   (ИнформацияОбОшибке.Причина.Описание);
    код                     =   Ж_ext.СвернутьВ1Пробел(ИнформацияОбОшибке.ИсходнаяСтрока);
    Причина                 =   ?(ЕстьПричина,  ИнформацияОбОшибке.Причина.Описание, "");
    НомСтр                  =   Строка(ИнформацияОбОшибке.НомерСтроки);
    ErrTxt                  =   БольшоеОписание      + " "
                            +   "Описание        = " + ИнформацияОбОшибке.Описание  + СимВКПС
                            +   "Номер строки    = " + НомСтр                       + СимВКПС
                            +   "Причина         = " + Причина                      + СимВКПС
                            +   "Имя модуля      = " + ИнформацияОбОшибке.ИмяМодуля + СимВКПС
                            +   "Исходная строка = " + код                          + СимВКПС;
    Если
        ЗначениеЗаполнено(БольшоеОписание)
    Тогда
        БольшоеОписание     =   ErrTxt + СимВКПС + БольшоеОписание;
    Иначе
        БольшоеОписание     =   ErrTxt;
    КонецЕсли;
    Возврат Запиши(Событие, МалоеОписание, БольшоеОписание, Уровень);
КонецФункции

Функция ПричесатьДату(ЭтаДата) Экспорт
    Если
        ТипЗнч(ЭтаДата) = Тип("Строка")
    Тогда
        ЭтаДата             =   Дата(ЭтаДата);
    КонецЕсли;
    DDate                   =   Формат(ЭтаДата, "ДЛФ = ДД");
    DDate                   =   СокрЛП(DDate);
    DDate                   =   ?(СтрДлина(DDate) = 1, "0" + DDate, DDate);
    Возврат DDate;
КонецФункции

Функция ЕстьСвойство(пОбъект, пИмяРек, пТипЗначения = Неопределено) Экспорт
    КонтрольноеЗначение     =   Новый УникальныйИдентификатор;
    Попытка
        СтруктураРеквизита  =   Новый Структура(пИмяРек, КонтрольноеЗначение);
    Исключение
        Возврат Ложь;
    КонецПопытки;
    Если
        СтруктураРеквизита.Количество() > 1
    Тогда
        Возврат Ложь; // если передан список реквизитов, то создастся структура со списком ключей, что сигнатурой метода не предусмотрено
    КонецЕсли;
    ПроверятьТип            =   ТипЗНЧ(пТипЗначения) = Тип("Тип");
    Попытка
        ЗаполнитьЗначенияСвойств(СтруктураРеквизита, пОбъект);
    Исключение
        Возврат Ложь
    КонецПопытки;
    Результат               =   Ложь;
    Значение                =   СтруктураРеквизита[пИмяРек];
    Если
        Значение <> КонтрольноеЗначение
    Тогда
        Если
            ПроверятьТип
        Тогда
            Результат       =   пТипЗначения = ТипЗНЧ(Значение);
        Иначе
            Результат       =   Истина;
        КонецЕсли;
    КонецЕсли;
    Возврат Результат;
КонецФункции

Функция СвернутьВ1Пробел(ВхСтрока) Экспорт
    Рез                     =   "";
    Берём                   =   Ложь;
    LastSpace               =   Истина;
    ПредСимв                =   "";
    Игнор                   =   ".()";
    Для СтрЭлемН = 0
    По  СтрДлина(ВхСтрока)
    Цикл
        Сим                 =   Сред(ВхСтрока ,СтрЭлемН, 1);
        Если
            Сим = Символы.ВК
        Или Сим = Символы.ВТаб
        Или Сим = Символы.НПП
        Или Сим = Символы.ПС
        Или Сим = Символы.ПФ
        Или Сим = Символы.Таб
        Тогда
            Продолжить;
        КонецЕсли;
        Если
            Сим = " "
        Тогда
            Если
                LastSpace
            Тогда
                Продолжить;
            ИначеЕсли
                СтрНайти(Игнор,ПредСимв) > 0
            Тогда
                Берём       =   Ложь;
                LastSpace   =   Ложь;
                Продолжить;
            Иначе
                Берём       =   Истина;
                LastSpace   =   Истина;
            КонецЕсли;
        Иначе
            Берём           =   Истина;
            LastSpace       =   Ложь;
        КонецЕсли;
        Если
            Берём
        Тогда
            Рез             =   Рез + Сим;
            ПредСимв        =   ПредСимв;
        КонецЕсли;
    КонецЦикла;
    Возврат Рез;
КонецФункции

Функция ПолучитьДопРеквизит(ЭтотОбъект, ИмяРеквизита) Экспорт
    Для Каждого Реквизит
    Из          ЭтотОбъект.ДополнительныеРеквизиты
    Цикл
        Если
            Реквизит.Свойство.Заголовок = ИмяРеквизита
        Тогда
            Если
                Ж_ext.ЕстьСвойство(Реквизит.Значение, "ПолноеНаименование")
            Тогда
                Если
                    ЗначениеЗаполнено(Реквизит.Значение.ПолноеНаименование)
                Тогда
                    Возврат Реквизит.Значение.ПолноеНаименование;
                Иначе
                    Возврат Реквизит.Значение.Наименование;
                КонецЕсли;
            Иначе
                Возврат Реквизит.Значение;
            КонецЕсли
        КонецЕсли
    КонецЦикла;
    Возврат "";
КонецФункции

Процедура СохранитьДопРеквизит(МойОбъект, ИмяЭлемента, ЗначениеЭлемента) Экспорт
    ЭтоМойОбъект                                        =   МойОбъект.ПолучитьОбъект();
    Свойство                                            =   ПолучитьСвойствоРеквизита(ИмяЭлемента, МойОбъект);
    Для Каждого ДопРеквизит
    Из          ЭтоМойОбъект.ДополнительныеРеквизиты
    Цикл
        Если
            ДопРеквизит.Свойство = Свойство
        Тогда
            МойРеквизит                                 =   ДопРеквизит;
            Прервать;
        КонецЕсли;
    КонецЦикла;
    Если
        Не ЗначениеЗаполнено(МойРеквизит)
    Тогда
        МойРеквизит                                     =   ЭтоМойОбъект.ДополнительныеРеквизиты.Добавить();
        МойРеквизит.Свойство                            =   Свойство;
    КонецЕсли;
    МойРеквизит.Значение                                =   ЗначениеЭлемента;
    ЭтоМойОбъект.Записать();
КонецПроцедуры

Функция ПолучитьСвойствоРеквизита(МоёИмя, МойОбъект)
    Сократил                                            =   ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения;
    Запрос                                              =   Новый Запрос("ВЫБРАТЬ
                                                        |   Хар.Ссылка КАК Ссылка
                                                        |ИЗ
                                                        |   ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Хар
                                                        |ГДЕ
                                                        |   Хар.Заголовок = &Наименование
                                                        |   И Хар.НаборСвойств В
                                                        |           (ВЫБРАТЬ
                                                        |               Наб.Ссылка КАК Ссылка
                                                        |           ИЗ
                                                        |               Справочник.НаборыДополнительныхРеквизитовИСведений КАК Наб
                                                        |           ГДЕ
                                                        |               Наб.Наименование = &ПринадлежностьНабора)");
    Запрос.УстановитьПараметр("ПринадлежностьНабора"    , МойОбъект.Метаданные().Синоним);
    Запрос.УстановитьПараметр("Наименование"            , МоёИмя);
    ТипРеквизита                                        =   Запрос.Выполнить().Выбрать();
    Если
        ТипРеквизита.Количество() = 0
    Тогда
        МойТипРеквизита                                 =   Сократил.НайтиПоНаименованию(МоёИмя, Ложь);
    Иначе
        ТипРеквизита.Следующий();
        МойТипРеквизита                                 =   ТипРеквизита.Ссылка;
    КонецЕсли;
    Если
        НЕ ЗначениеЗаполнено(МойТипРеквизита)
    Тогда
        НовыйРеквизит                                   =   Сократил.СоздатьЭлемент();
        НовыйРеквизит.Имя                               =   МоёИмя;
        НовыйРеквизит.Заголовок                         =   МоёИмя;
        НовыйРеквизит.Наименование                      =   МоёИмя;
        НовыйРеквизит.Доступен                          =   Истина;
        НовыйРеквизит.Записать();
        МойТипРеквизита                                 =   НовыйРеквизит;
    КонецЕсли;
    Возврат МойТипРеквизита.Ссылка;
КонецФункции
